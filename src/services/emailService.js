// ========================================
// EMAIL SERVICE MODERNE
// src/services/emailService.js
// ========================================
const nodemailer = require('nodemailer');

class EmailService {
  constructor() {
    this.transporter = nodemailer.createTransport({
      host: process.env.EMAIL_HOST,
      port: process.env.EMAIL_PORT,
      secure: false,
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    });
  }

  // Template de base pour tous les emails
  getBaseTemplate(content, title = '') {
    return `
        <!DOCTYPE html>
        <html lang="fr">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>${title}</title>
            <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }
                
                body {
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    padding: 20px;
                    line-height: 1.6;
                }
                
                .email-container {
                    max-width: 600px;
                    margin: 0 auto;
                    background: #ffffff;
                    border-radius: 20px;
                    overflow: hidden;
                    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
                    position: relative;
                }
                
                .header {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 40px 30px;
                    text-align: center;
                    position: relative;
                    overflow: hidden;
                }
                
                .header::before {
                    content: '';
                    position: absolute;
                    top: -50%;
                    left: -50%;
                    width: 200%;
                    height: 200%;
                    background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
                    animation: shine 3s infinite;
                }
                
                @keyframes shine {
                    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
                    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
                }
                
                .logo {
                    font-size: 28px;
                    font-weight: bold;
                    margin-bottom: 10px;
                    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                }
                
                .logo::before {
                    content: 'üéÆ';
                    margin-right: 10px;
                }
                
                .tagline {
                    font-size: 14px;
                    opacity: 0.9;
                    font-weight: 300;
                }
                
                .content {
                    padding: 40px 30px;
                    background: #ffffff;
                }
                
                .content h1 {
                    color: #2d3748;
                    font-size: 24px;
                    margin-bottom: 20px;
                    text-align: center;
                }
                
                .content h2 {
                    color: #4a5568;
                    font-size: 20px;
                    margin-bottom: 15px;
                }
                
                .content p {
                    color: #4a5568;
                    margin-bottom: 15px;
                    font-size: 16px;
                }
                
                .button {
                    display: inline-block;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 15px 30px;
                    text-decoration: none;
                    border-radius: 50px;
                    font-weight: bold;
                    text-align: center;
                    margin: 20px 0;
                    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
                    transition: all 0.3s ease;
                    font-size: 16px;
                }
                
                .button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
                }
                
                .info-box {
                    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
                    color: white;
                    padding: 20px;
                    border-radius: 15px;
                    margin: 20px 0;
                    text-align: center;
                }
                
                .warning-box {
                    background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
                    color: #8b4513;
                    padding: 15px;
                    border-radius: 10px;
                    margin: 20px 0;
                    border-left: 4px solid #ff6b6b;
                }
                
                .credentials {
                    background: #f7fafc;
                    border: 2px dashed #cbd5e0;
                    border-radius: 10px;
                    padding: 20px;
                    margin: 20px 0;
                    text-align: center;
                }
                
                .credentials strong {
                    color: #2d3748;
                    font-size: 18px;
                }
                
                .footer {
                    background: #2d3748;
                    color: #a0aec0;
                    padding: 30px;
                    text-align: center;
                    font-size: 14px;
                }
                
                .footer a {
                    color: #667eea;
                    text-decoration: none;
                }
                
                .social-links {
                    margin: 20px 0;
                }
                
                .social-links a {
                    display: inline-block;
                    margin: 0 10px;
                    color: #667eea;
                    font-size: 18px;
                    text-decoration: none;
                }
                
                @media (max-width: 600px) {
                    .email-container {
                        margin: 10px;
                        border-radius: 15px;
                    }
                    
                    .header, .content {
                        padding: 20px;
                    }
                    
                    .logo {
                        font-size: 24px;
                    }
                    
                    .button {
                        display: block;
                        margin: 20px auto;
                        width: fit-content;
                    }
                }
            </style>
        </head>
        <body>
            <div class="email-container">
                <div class="header">
                    <div class="logo">ESPORT TEAM</div>
                    <div class="tagline">Votre √©quipe de champions</div>
                </div>
                
                <div class="content">
                    ${content}
                </div>
                
                <div class="footer">
                    <div class="social-links">
                        <a href="#" title="Discord">üéÆ</a>
                        <a href="#" title="Twitter">üê¶</a>
                        <a href="#" title="Twitch">üì∫</a>
                    </div>
                    <p>¬© 2025 Esport Team - Tous droits r√©serv√©s</p>
                    <p>Vous recevez cet email car vous faites partie de notre √©quipe.</p>
                    <p><a href="#">Se d√©sabonner</a> | <a href="#">Pr√©f√©rences</a></p>
                </div>
            </div>
        </body>
        </html>
        `;
  }

  async sendVerificationEmail(email, token, pseudo) {
    const verificationUrl = `${process.env.FRONTEND_URL}/verify-email?token=${token}`;

    const content = `
            <h1>üöÄ Bienvenue ${pseudo} !</h1>
            
            <p>F√©licitations ! Tu viens de rejoindre l'une des meilleures √©quipes esport. üèÜ</p>
            
            <p>Avant de pouvoir acc√©der √† tous les outils de l'√©quipe, nous devons v√©rifier ton adresse email. C'est une question de s√©curit√© - tu comprends, on ne peut pas laisser n'importe qui acc√©der aux strat√©gies secr√®tes ! üòâ</p>
            
            <div style="text-align: center; margin: 30px 0;">
                <a href="${verificationUrl}" class="button">
                    ‚ú® Activer mon compte
                </a>
            </div>
            
            <div class="warning-box">
                <strong>‚è∞ Attention :</strong> Ce lien de v√©rification expire dans 24 heures. Ne tarde pas trop !
            </div>
            
            <p>Une fois ton compte activ√©, tu pourras :</p>
            <ul style="color: #4a5568; margin-left: 20px;">
                <li>üóìÔ∏è Consulter le planning des entra√Ænements</li>
                <li>üí¨ Recevoir les invitations aux sessions</li>
                <li>üìä Acc√©der aux analyses de tes performances</li>
                <li>üéØ Suivre tes objectifs personnels</li>
            </ul>
            
            <p>Si tu n'es pas √† l'origine de cette inscription, ignore simplement cet email. Ton adresse ne sera pas utilis√©e.</p>
            
            <p style="margin-top: 30px;"><strong>Pr√™t(e) √† dominer ? Let's go ! üî•</strong></p>
        `;

    const mailOptions = {
      from: `"üéÆ SilentForVibes" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: `üöÄ Bienvenue ${pseudo} - Active ton compte maintenant !`,
      html: this.getBaseTemplate(content, 'Activation de compte'),
    };

    await this.transporter.sendMail(mailOptions);
  }

  async sendEventInvitation(
    email,
    pseudo,
    eventTitle,
    eventDate,
    eventType = 'Session'
  ) {
    const eventDateTime = new Date(eventDate);
    const formattedDate = eventDateTime.toLocaleDateString('fr-FR', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    });
    const formattedTime = eventDateTime.toLocaleTimeString('fr-FR', {
      hour: '2-digit',
      minute: '2-digit',
    });

    const eventEmoji = {
      entrainement: 'üèãÔ∏è‚Äç‚ôÇÔ∏è',
      coaching: 'üéØ',
      tournois: 'üèÜ',
      practices: '‚öîÔ∏è',
      session_jeu: 'üéÆ',
    };

    const content = `
            <h1>üì¨ Nouvelle invitation</h1>
            
            <p>Salut <strong>${pseudo}</strong> ! üëã</p>
            
            <p>Tu es convoqu√©(e) pour une nouvelle session. Pr√©pare-toi, √ßa va √™tre intense ! üî•</p>
            
            <div class="info-box">
                <h2>${eventEmoji[eventType] || 'üéÆ'} ${eventTitle}</h2>
                <p style="margin: 10px 0; font-size: 18px;">
                    üìÖ <strong>${formattedDate}</strong><br>
                    üïê <strong>${formattedTime}</strong>
                </p>
            </div>
            
            <p>Cette session est importante pour l'√©volution de l'√©quipe. Ta pr√©sence compte ! üí™</p>
            
            <div style="text-align: center; margin: 30px 0;">
                <a href="${process.env.FRONTEND_URL}/events" class="button">
                    ‚úÖ R√©pondre √† l'invitation
                </a>
            </div>
            
            <div class="warning-box">
                <strong>‚ö° Action requise :</strong> Connecte-toi sur la plateforme pour confirmer ta pr√©sence. Les absences non justifi√©es sont mal vues par le coach ! üò§
            </div>
            
            <p>N'oublie pas de :</p>
            <ul style="color: #4a5568; margin-left: 20px;">
                <li>üéß Pr√©parer ton setup audio</li>
                <li>‚òï Pr√©voir de quoi t'hydrater</li>
                <li>üß† R√©viser les strat√©gies r√©centes</li>
                <li>üî• Arriver avec la motivation √† bloc !</li>
            </ul>
            
            <p style="margin-top: 30px;"><strong>See you on the Rift ! üöÄ</strong></p>
        `;

    const mailOptions = {
      from: `"üéÆ Esport Team" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: `üîî ${eventTitle} - ${formattedDate}`,
      html: this.getBaseTemplate(content, 'Invitation √©v√©nement'),
    };

    await this.transporter.sendMail(mailOptions);
  }

  async sendTemporaryPassword(
    email,
    pseudo,
    temporaryPassword,
    createdBy = 'un capitaine'
  ) {
    const content = `
            <h1>üéä Bienvenue dans l'√©quipe ${pseudo} !</h1>
            
            <p>Excellente nouvelle ! ${createdBy} vient de t'ajouter √† notre √©quipe esport. Tu fais maintenant partie de l'√©lite ! üèÜ</p>
            
            <p>Ton compte a √©t√© cr√©√© avec des identifiants temporaires. Pour des raisons de s√©curit√©, tu devras changer ton mot de passe d√®s ta premi√®re connexion.</p>
            
            <div class="credentials">
                <h2>üîê Tes identifiants</h2>
                <p><strong>üìß Email :</strong> ${email}</p>
                <p><strong>üîë Mot de passe temporaire :</strong> <code style="background: #e2e8f0; padding: 5px 10px; border-radius: 5px; font-family: monospace; font-size: 16px;">${temporaryPassword}</code></p>
            </div>
            
            <div class="warning-box">
                <strong>‚ö†Ô∏è Important :</strong> Ce mot de passe est temporaire et doit √™tre chang√© lors de ta premi√®re connexion. Ne le partage avec personne !
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
                <a href="${process.env.FRONTEND_URL}/login" class="button">
                    üöÄ Premi√®re connexion
                </a>
            </div>
            
            <p>Une fois connect√©(e), tu auras acc√®s √† :</p>
            <ul style="color: #4a5568; margin-left: 20px;">
                <li>üìÖ Le planning complet de l'√©quipe</li>
                <li>üí¨ Les communications internes</li>
                <li>üìä Tes statistiques personnelles</li>
                <li>üéØ Les objectifs et exercices du coach</li>
                <li>üèÜ L'historique des victoires de l'√©quipe</li>
            </ul>
            
            <div class="info-box">
                <p style="margin: 0;"><strong>üí° Conseil de pro :</strong> Change ton mot de passe pour quelque chose de personnel mais s√©curis√©. Mix majuscules, minuscules, chiffres et caract√®res sp√©ciaux !</p>
            </div>
            
            <p style="margin-top: 30px;">Pr√™t(e) √† √©crire l'histoire avec nous ? <strong>Let's make some magic happen ! ‚ú®</strong></p>
        `;

    const mailOptions = {
      from: `"üéÆ Esport Team" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: `üéâ ${pseudo}, bienvenue dans l'√©quipe ! Ton compte t'attend`,
      html: this.getBaseTemplate(content, 'Compte cr√©√©'),
    };

    await this.transporter.sendMail(mailOptions);
  }

  // Nouveau : Email de rappel d'√©v√©nement
  async sendEventReminder(email, pseudo, eventTitle, eventDate, timeToEvent) {
    const content = `
            <h1>‚è∞ Rappel important !</h1>
            
            <p>Hey <strong>${pseudo}</strong> ! üëã</p>
            
            <p>Petit rappel amical : tu as un √©v√©nement qui approche !</p>
            
            <div class="info-box">
                <h2>üéÆ ${eventTitle}</h2>
                <p style="margin: 10px 0; font-size: 18px;">
                    üö® <strong>Dans ${timeToEvent}</strong>
                </p>
            </div>
            
            <p>N'oublie pas de te pr√©parer et d'arriver √† l'heure. L'√©quipe compte sur toi ! üí™</p>
            
            <div style="text-align: center; margin: 30px 0;">
                <a href="${process.env.FRONTEND_URL}/events" class="button">
                    üìã Voir les d√©tails
                </a>
            </div>
        `;

    const mailOptions = {
      from: `"üéÆ Esport Team" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: `‚è∞ Rappel : ${eventTitle} bient√¥t !`,
      html: this.getBaseTemplate(content, 'Rappel √©v√©nement'),
    };

    await this.transporter.sendMail(mailOptions);
  }

  // Nouveau : Email de f√©licitations
  async sendCongratulations(email, pseudo, achievement) {
    const content = `
            <h1>üéâ F√©licitations ${pseudo} !</h1>
            
            <p>WOW ! Tu viens de r√©aliser quelque chose d'exceptionnel ! üî•</p>
            
            <div class="info-box">
                <h2>üèÜ ${achievement}</h2>
                <p style="margin: 0;">Tu es une v√©ritable l√©gende !</p>
            </div>
            
            <p>Continue comme √ßa, tu fais la fiert√© de toute l'√©quipe ! üí™</p>
            
            <p style="text-align: center; font-size: 20px; margin: 30px 0;">
                üéä GG WP ! üéä
            </p>
        `;

    const mailOptions = {
      from: `"üéÆ Esport Team" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: `üèÜ F√©licitations ${pseudo} ! Tu assures !`,
      html: this.getBaseTemplate(content, 'F√©licitations'),
    };

    await this.transporter.sendMail(mailOptions);
  }
}

module.exports = new EmailService();
